{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\BE MAJOR PROJECT Krutik\\\\client\\\\src\\\\DetectionApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetectionApp() {\n  _s();\n  const [imageSrc, setImageSrc] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    // Connect to WebSocket\n    const websocket = new WebSocket(\"ws://localhost:7001/ws\");\n    websocket.onopen = () => console.log(\"Connected to CV Service WebSocket\");\n    websocket.onmessage = event => {\n      try {\n        const msg = JSON.parse(event.data);\n        if (msg.image) setImageSrc(`data:image/jpeg;base64,${msg.image}`);\n        if (msg.detections) setDetections(msg.detections);\n      } catch (err) {\n        console.error(\"Invalid WS message:\", event.data);\n      }\n    };\n    setWs(websocket);\n    return () => websocket.close();\n  }, []);\n\n  // Upload image to /detect endpoint\n  const handleUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      await fetch(\"http://localhost:7001/detect\", {\n        method: \"POST\",\n        body: formData\n      });\n      // No need to handle response; WebSocket will update image/detections\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCE1 AI/ML Real-Time Messaging System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), imageSrc ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detection Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: \"Detection\",\n        style: {\n          maxWidth: \"600px\",\n          border: \"2px solid black\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Messages detected by Computer Vision service will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), detections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Detections:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: detections.map((det, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [det.class, \" (\", (det.conf * 100).toFixed(1), \"%)\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(DetectionApp, \"XVaIYaFljf6cscUmuNqVKTU9144=\");\n_c = DetectionApp;\nvar _c;\n$RefreshReg$(_c, \"DetectionApp\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DetectionApp","_s","imageSrc","setImageSrc","detections","setDetections","ws","setWs","websocket","WebSocket","onopen","console","log","onmessage","event","msg","JSON","parse","data","image","err","error","close","handleUpload","file","target","files","formData","FormData","append","fetch","method","body","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","marginTop","src","alt","maxWidth","border","length","map","det","i","class","conf","toFixed","_c","$RefreshReg$"],"sources":["D:/projects/BE MAJOR PROJECT Krutik/client/src/DetectionApp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function DetectionApp() {\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [detections, setDetections] = useState([]);\r\n  const [ws, setWs] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Connect to WebSocket\r\n    const websocket = new WebSocket(\"ws://localhost:7001/ws\");\r\n\r\n    websocket.onopen = () => console.log(\"Connected to CV Service WebSocket\");\r\n\r\n    websocket.onmessage = (event) => {\r\n      try {\r\n        const msg = JSON.parse(event.data);\r\n        if (msg.image) setImageSrc(`data:image/jpeg;base64,${msg.image}`);\r\n        if (msg.detections) setDetections(msg.detections);\r\n      } catch (err) {\r\n        console.error(\"Invalid WS message:\", event.data);\r\n      }\r\n    };\r\n\r\n    setWs(websocket);\r\n    return () => websocket.close();\r\n  }, []);\r\n\r\n  // Upload image to /detect endpoint\r\n  const handleUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      await fetch(\"http://localhost:7001/detect\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      // No need to handle response; WebSocket will update image/detections\r\n    } catch (err) {\r\n      console.error(\"Upload failed:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"Arial, sans-serif\" }}>\r\n      <h2>ðŸ“¡ AI/ML Real-Time Messaging System</h2>\r\n\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleUpload} />\r\n\r\n      {imageSrc ? (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>Detection Image:</h3>\r\n          <img\r\n            src={imageSrc}\r\n            alt=\"Detection\"\r\n            style={{ maxWidth: \"600px\", border: \"2px solid black\" }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <p>Messages detected by Computer Vision service will appear here.</p>\r\n      )}\r\n\r\n      {detections.length > 0 && (\r\n        <div>\r\n          <h3>Detections:</h3>\r\n          <ul>\r\n            {detections.map((det, i) => (\r\n              <li key={i}>\r\n                {det.class} ({(det.conf * 100).toFixed(1)}%)\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}