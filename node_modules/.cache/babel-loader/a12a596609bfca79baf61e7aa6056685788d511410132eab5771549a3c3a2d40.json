{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\BE MAJOR PROJECT Krutik\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null); // overlay canvas\n  const hiddenCanvasRef = useRef(null); // for snapshots\n  const [detections, setDetections] = useState([]);\n  useEffect(() => {\n    // Start webcam\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n    });\n\n    // WebSocket connection\n    const ws = new WebSocket(\"ws://localhost:7001/ws\");\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.detections) {\n          setDetections(data.detections);\n          drawBoxes(data.detections);\n        }\n      } catch {\n        console.log(\"Raw:\", event.data);\n      }\n    };\n\n    // Interval: capture frame & send to backend\n    const interval = setInterval(() => {\n      if (!videoRef.current || !hiddenCanvasRef.current) return;\n      const ctx = hiddenCanvasRef.current.getContext(\"2d\");\n      ctx.drawImage(videoRef.current, 0, 0, 640, 480);\n      hiddenCanvasRef.current.toBlob(async blob => {\n        if (!blob) return;\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"frame.jpg\");\n        try {\n          await fetch(\"http://localhost:7001/detect\", {\n            method: \"POST\",\n            body: formData\n          });\n        } catch (err) {\n          console.error(\"Error sending frame:\", err);\n        }\n      }, \"image/jpeg\", 0.7);\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n      ws.close();\n    };\n  }, []);\n\n  // Function to draw boxes on canvas\n  const drawBoxes = detections => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    detections.forEach(det => {\n      const [x1, y1, x2, y2] = det.bbox;\n      ctx.strokeStyle = \"red\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x1, y1, x2 - x1, y2 - y1);\n      ctx.fillStyle = \"red\";\n      ctx.font = \"16px Arial\";\n      ctx.fillText(`${det.class} (${det.conf.toFixed(2)})`, x1, y1 - 5);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"\\uD83D\\uDCE1 Real-Time Object Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"640px\",\n        height: \"480px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        width: \"640\",\n        height: \"480\",\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"640\",\n        height: \"480\",\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: hiddenCanvasRef,\n      width: \"640\",\n      height: \"480\",\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: detections.length > 0 ? detections.map((det, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-2 mb-2 border rounded bg-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: det.class\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), \" (conf: \", det.conf.toFixed(2), \")\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No objects detected yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eNomjgV2zc+o1WGUdDlvg/y9aag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","App","_s","videoRef","canvasRef","hiddenCanvasRef","detections","setDetections","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","ws","WebSocket","onmessage","event","data","JSON","parse","drawBoxes","console","log","interval","setInterval","ctx","getContext","drawImage","toBlob","blob","formData","FormData","append","fetch","method","body","err","error","clearInterval","close","canvas","clearRect","width","height","forEach","det","x1","y1","x2","y2","bbox","strokeStyle","lineWidth","strokeRect","fillStyle","font","fillText","class","conf","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","ref","autoPlay","playsInline","top","left","display","length","map","i","_c","$RefreshReg$"],"sources":["D:/projects/BE MAJOR PROJECT Krutik/client/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nfunction App() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null); // overlay canvas\n  const hiddenCanvasRef = useRef(null); // for snapshots\n  const [detections, setDetections] = useState([]);\n\n  useEffect(() => {\n    // Start webcam\n    navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\n      videoRef.current.srcObject = stream;\n    });\n\n    // WebSocket connection\n    const ws = new WebSocket(\"ws://localhost:7001/ws\");\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.detections) {\n          setDetections(data.detections);\n          drawBoxes(data.detections);\n        }\n      } catch {\n        console.log(\"Raw:\", event.data);\n      }\n    };\n\n    // Interval: capture frame & send to backend\n    const interval = setInterval(() => {\n      if (!videoRef.current || !hiddenCanvasRef.current) return;\n\n      const ctx = hiddenCanvasRef.current.getContext(\"2d\");\n      ctx.drawImage(videoRef.current, 0, 0, 640, 480);\n\n      hiddenCanvasRef.current.toBlob(async (blob) => {\n        if (!blob) return;\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"frame.jpg\");\n\n        try {\n          await fetch(\"http://localhost:7001/detect\", {\n            method: \"POST\",\n            body: formData,\n          });\n        } catch (err) {\n          console.error(\"Error sending frame:\", err);\n        }\n      }, \"image/jpeg\", 0.7);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n      ws.close();\n    };\n  }, []);\n\n  // Function to draw boxes on canvas\n  const drawBoxes = (detections) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    detections.forEach((det) => {\n      const [x1, y1, x2, y2] = det.bbox;\n      ctx.strokeStyle = \"red\";\n      ctx.lineWidth = 2;\n      ctx.strokeRect(x1, y1, x2 - x1, y2 - y1);\n\n      ctx.fillStyle = \"red\";\n      ctx.font = \"16px Arial\";\n      ctx.fillText(`${det.class} (${det.conf.toFixed(2)})`, x1, y1 - 5);\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold mb-4\">ðŸ“¡ Real-Time Object Detection</h1>\n\n      <div style={{ position: \"relative\", width: \"640px\", height: \"480px\" }}>\n        {/* Live webcam */}\n        <video\n          ref={videoRef}\n          autoPlay\n          playsInline\n          width=\"640\"\n          height=\"480\"\n          style={{ position: \"absolute\", top: 0, left: 0 }}\n        />\n\n        {/* Overlay canvas */}\n        <canvas\n          ref={canvasRef}\n          width=\"640\"\n          height=\"480\"\n          style={{ position: \"absolute\", top: 0, left: 0 }}\n        />\n      </div>\n\n      {/* Hidden canvas for snapshots */}\n      <canvas\n        ref={hiddenCanvasRef}\n        width=\"640\"\n        height=\"480\"\n        style={{ display: \"none\" }}\n      />\n\n      <div className=\"mt-4\">\n        {detections.length > 0 ? (\n          detections.map((det, i) => (\n            <div key={i} className=\"p-2 mb-2 border rounded bg-gray-100\">\n              <strong>{det.class}</strong> (conf: {det.conf.toFixed(2)})\n            </div>\n          ))\n        ) : (\n          <p>No objects detected yet</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}