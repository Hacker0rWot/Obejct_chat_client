{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\BE MAJOR PROJECT Krutik\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const videoRef = useRef(null);\n  const wsRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [decryptedMessages, setDecryptedMessages] = useState({});\n  const [inputMsg, setInputMsg] = useState(\"\");\n\n  // ------------------- WebSocket -------------------\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:7001/ws\");\n    ws.onopen = () => console.log(\"WebSocket connected!\");\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"detection_broadcast\") {\n        setImage(`data:image/jpeg;base64,${data.image}`);\n        setDetections(data.detections);\n      } else if (data.type === \"new_message\") {\n        const {\n          object_id,\n          message\n        } = data;\n        setMessages(prev => ({\n          ...prev,\n          [object_id]: [...(prev[object_id] || []), message]\n        }));\n      }\n    };\n    wsRef.current = ws;\n    return () => ws.close();\n  }, []);\n\n  // ------------------- Camera -------------------\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n    });\n  }, []);\n\n  // ------------------- Send frames to backend -------------------\n  useEffect(() => {\n    const fps = 5; // 5 frames per second\n    const interval = setInterval(() => {\n      if (!videoRef.current) return;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 640;\n      canvas.height = 480;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(videoRef.current, 0, 0, 640, 480);\n      canvas.toBlob(async blob => {\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", blob, \"frame.jpg\");\n          await fetch(\"http://localhost:7001/detect\", {\n            method: \"POST\",\n            body: formData\n          });\n        } catch (err) {\n          console.warn(\"Failed to send frame:\", err);\n        }\n      }, \"image/jpeg\");\n    }, 1000 / fps);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ------------------- Send message -------------------\n  const sendMessage = () => {\n    if (!selectedObject || !inputMsg) return;\n    wsRef.current.send(JSON.stringify({\n      type: \"send_message\",\n      object_id: selectedObject,\n      user_id: \"user_1\",\n      text: inputMsg\n    }));\n    setInputMsg(\"\");\n  };\n\n  // ------------------- AES-GCM Decrypt -------------------\n  const decryptAESGCM = async (ciphertextB64, ivB64, keyB64) => {\n    const base64ToArrayBuffer = base64 => {\n      const binary = window.atob(base64);\n      const len = binary.length;\n      const bytes = new Uint8Array(len);\n      for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);\n      return bytes.buffer;\n    };\n    try {\n      const keyBuffer = base64ToArrayBuffer(keyB64);\n      const cryptoKey = await window.crypto.subtle.importKey(\"raw\", keyBuffer, {\n        name: \"AES-GCM\"\n      }, false, [\"decrypt\"]);\n      const iv = base64ToArrayBuffer(ivB64);\n      const ct = base64ToArrayBuffer(ciphertextB64);\n      const decrypted = await window.crypto.subtle.decrypt({\n        name: \"AES-GCM\",\n        iv\n      }, cryptoKey, ct);\n      return new TextDecoder().decode(decrypted);\n    } catch {\n      return \"[Decryption Failed]\";\n    }\n  };\n\n  // ------------------- Decrypt messages per selected object -------------------\n  useEffect(() => {\n    if (!selectedObject || !messages[selectedObject]) return;\n    const decryptAll = async () => {\n      const arr = await Promise.all(messages[selectedObject].map(async msg => {\n        if (msg.text_enc) {\n          const text = await decryptAESGCM(msg.text_enc.ciphertext, msg.text_enc.iv, msg.text_enc.key);\n          return {\n            ...msg,\n            plaintext: text\n          };\n        } else {\n          return {\n            ...msg,\n            plaintext: msg.text || \"\"\n          };\n        }\n      }));\n      setDecryptedMessages(prev => ({\n        ...prev,\n        [selectedObject]: arr\n      }));\n    };\n    decryptAll();\n  }, [selectedObject, messages, decryptAESGCM]); // added decryptAESGCM to dependencies\n\n  // ------------------- Render -------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCE1 AI/ML Real-Time Messaging System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"inline-block\"\n      },\n      children: [image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Detection\",\n        style: {\n          maxWidth: \"800px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), detections.map(det => {\n        const [x1, y1, x2, y2] = det.bbox;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedObject(det.object_id),\n          style: {\n            position: \"absolute\",\n            left: x1,\n            top: y1,\n            width,\n            height,\n            border: \"2px solid red\",\n            cursor: \"pointer\",\n            backgroundColor: selectedObject === det.object_id ? \"rgba(255,0,0,0.2)\" : \"transparent\"\n          },\n          children: det.class\n        }, det.object_id || `${x1}-${y1}-${x2}-${y2}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Object: \", selectedObject || \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: \"200px\",\n          overflowY: \"auto\",\n          border: \"1px solid gray\",\n          padding: \"10px\"\n        },\n        children: selectedObject && decryptedMessages[selectedObject] ? decryptedMessages[selectedObject].map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.user_id, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this), \" \", msg.plaintext]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this)) : \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMsg,\n        onChange: e => setInputMsg(e.target.value),\n        placeholder: \"Type message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l3IXFVRSegLhaDdplxmYH6Ij8b0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","videoRef","wsRef","image","setImage","detections","setDetections","selectedObject","setSelectedObject","messages","setMessages","decryptedMessages","setDecryptedMessages","inputMsg","setInputMsg","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","object_id","message","prev","current","close","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","play","fps","interval","setInterval","canvas","document","createElement","width","height","ctx","getContext","drawImage","toBlob","blob","formData","FormData","append","fetch","method","body","err","warn","clearInterval","sendMessage","send","stringify","user_id","text","decryptAESGCM","ciphertextB64","ivB64","keyB64","base64ToArrayBuffer","base64","binary","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","keyBuffer","cryptoKey","crypto","subtle","importKey","name","iv","ct","decrypted","decrypt","TextDecoder","decode","decryptAll","arr","Promise","all","map","msg","text_enc","ciphertext","key","plaintext","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","display","position","src","alt","maxWidth","det","x1","y1","x2","y2","bbox","onClick","left","top","border","cursor","backgroundColor","class","marginTop","maxHeight","overflowY","idx","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/projects/BE MAJOR PROJECT Krutik/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function App() {\n  const videoRef = useRef(null);\n  const wsRef = useRef(null);\n\n  const [image, setImage] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [decryptedMessages, setDecryptedMessages] = useState({});\n  const [inputMsg, setInputMsg] = useState(\"\");\n\n  // ------------------- WebSocket -------------------\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:7001/ws\");\n    ws.onopen = () => console.log(\"WebSocket connected!\");\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n\n      if (data.type === \"detection_broadcast\") {\n        setImage(`data:image/jpeg;base64,${data.image}`);\n        setDetections(data.detections);\n      } else if (data.type === \"new_message\") {\n        const { object_id, message } = data;\n        setMessages((prev) => ({\n          ...prev,\n          [object_id]: [...(prev[object_id] || []), message],\n        }));\n      }\n    };\n    wsRef.current = ws;\n    return () => ws.close();\n  }, []);\n\n  // ------------------- Camera -------------------\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      });\n  }, []);\n\n  // ------------------- Send frames to backend -------------------\n  useEffect(() => {\n    const fps = 5; // 5 frames per second\n    const interval = setInterval(() => {\n      if (!videoRef.current) return;\n\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 640;\n      canvas.height = 480;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(videoRef.current, 0, 0, 640, 480);\n      canvas.toBlob(async (blob) => {\n        try {\n          const formData = new FormData();\n          formData.append(\"file\", blob, \"frame.jpg\");\n          await fetch(\"http://localhost:7001/detect\", {\n            method: \"POST\",\n            body: formData,\n          });\n        } catch (err) {\n          console.warn(\"Failed to send frame:\", err);\n        }\n      }, \"image/jpeg\");\n    }, 1000 / fps);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // ------------------- Send message -------------------\n  const sendMessage = () => {\n    if (!selectedObject || !inputMsg) return;\n    wsRef.current.send(\n      JSON.stringify({\n        type: \"send_message\",\n        object_id: selectedObject,\n        user_id: \"user_1\",\n        text: inputMsg,\n      })\n    );\n    setInputMsg(\"\");\n  };\n\n  // ------------------- AES-GCM Decrypt -------------------\n  const decryptAESGCM = async (ciphertextB64, ivB64, keyB64) => {\n    const base64ToArrayBuffer = (base64) => {\n      const binary = window.atob(base64);\n      const len = binary.length;\n      const bytes = new Uint8Array(len);\n      for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);\n      return bytes.buffer;\n    };\n\n    try {\n      const keyBuffer = base64ToArrayBuffer(keyB64);\n      const cryptoKey = await window.crypto.subtle.importKey(\n        \"raw\",\n        keyBuffer,\n        { name: \"AES-GCM\" },\n        false,\n        [\"decrypt\"]\n      );\n      const iv = base64ToArrayBuffer(ivB64);\n      const ct = base64ToArrayBuffer(ciphertextB64);\n      const decrypted = await window.crypto.subtle.decrypt(\n        { name: \"AES-GCM\", iv },\n        cryptoKey,\n        ct\n      );\n      return new TextDecoder().decode(decrypted);\n    } catch {\n      return \"[Decryption Failed]\";\n    }\n  };\n\n  // ------------------- Decrypt messages per selected object -------------------\n  useEffect(() => {\n    if (!selectedObject || !messages[selectedObject]) return;\n\n    const decryptAll = async () => {\n      const arr = await Promise.all(\n        messages[selectedObject].map(async (msg) => {\n          if (msg.text_enc) {\n            const text = await decryptAESGCM(\n              msg.text_enc.ciphertext,\n              msg.text_enc.iv,\n              msg.text_enc.key\n            );\n            return { ...msg, plaintext: text };\n          } else {\n            return { ...msg, plaintext: msg.text || \"\" };\n          }\n        })\n      );\n      setDecryptedMessages((prev) => ({ ...prev, [selectedObject]: arr }));\n    };\n\n    decryptAll();\n  }, [selectedObject, messages, decryptAESGCM]); // added decryptAESGCM to dependencies\n\n  // ------------------- Render -------------------\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>📡 AI/ML Real-Time Messaging System</h1>\n\n      {/* Hidden Camera */}\n      <video ref={videoRef} style={{ display: \"none\" }} />\n\n      {/* Detection Image */}\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        {image && (\n          <img src={image} alt=\"Detection\" style={{ maxWidth: \"800px\" }} />\n        )}\n        {detections.map((det) => {\n          const [x1, y1, x2, y2] = det.bbox;\n          const width = x2 - x1;\n          const height = y2 - y1;\n          return (\n            <div\n              key={det.object_id || `${x1}-${y1}-${x2}-${y2}`}\n              onClick={() => setSelectedObject(det.object_id)}\n              style={{\n                position: \"absolute\",\n                left: x1,\n                top: y1,\n                width,\n                height,\n                border: \"2px solid red\",\n                cursor: \"pointer\",\n                backgroundColor:\n                  selectedObject === det.object_id\n                    ? \"rgba(255,0,0,0.2)\"\n                    : \"transparent\",\n              }}\n            >\n              {det.class}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Message Box */}\n      <div style={{ marginTop: \"20px\" }}>\n        <h3>Selected Object: {selectedObject || \"None\"}</h3>\n        <div\n          style={{\n            maxHeight: \"200px\",\n            overflowY: \"auto\",\n            border: \"1px solid gray\",\n            padding: \"10px\",\n          }}\n        >\n          {selectedObject && decryptedMessages[selectedObject]\n            ? decryptedMessages[selectedObject].map((msg, idx) => (\n                <div key={idx}>\n                  <b>{msg.user_id}:</b> {msg.plaintext}\n                </div>\n              ))\n            : \"No messages yet.\"}\n        </div>\n        <input\n          type=\"text\"\n          value={inputMsg}\n          onChange={(e) => setInputMsg(e.target.value)}\n          placeholder=\"Type message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}