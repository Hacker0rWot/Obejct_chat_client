{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\BE MAJOR PROJECT Krutik\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    // Connect to FastAPI WebSocket\n    const socket = new WebSocket(\"ws://localhost:7001/ws\");\n    socket.onopen = () => {\n      console.log(\"✅ Connected to CV Service\");\n    };\n    socket.onmessage = event => {\n      const data = event.data;\n      console.log(\"📩 Message received:\", data);\n\n      // Append message to list\n      setMessages(prev => [...prev, data]);\n    };\n    socket.onclose = () => {\n      console.log(\"❌ Disconnected from CV Service\");\n    };\n    setWs(socket);\n\n    // cleanup\n    return () => {\n      socket.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDCE1 AI/ML Real-Time Messaging System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Messages detected by Computer Vision service will appear here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"x2KFYScCPNk8RAb1Lw+o0oeCI2s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","ws","setWs","socket","WebSocket","onopen","console","log","onmessage","event","data","prev","onclose","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","_c","$RefreshReg$"],"sources":["D:/projects/BE MAJOR PROJECT Krutik/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [ws, setWs] = useState(null);\n\n  useEffect(() => {\n    // Connect to FastAPI WebSocket\n    const socket = new WebSocket(\"ws://localhost:7001/ws\");\n\n    socket.onopen = () => {\n      console.log(\"✅ Connected to CV Service\");\n    };\n\n    socket.onmessage = (event) => {\n      const data = event.data;\n      console.log(\"📩 Message received:\", data);\n\n      // Append message to list\n      setMessages((prev) => [...prev, data]);\n    };\n\n    socket.onclose = () => {\n      console.log(\"❌ Disconnected from CV Service\");\n    };\n\n    setWs(socket);\n\n    // cleanup\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>📡 AI/ML Real-Time Messaging System</h1>\n        <p>\n          Messages detected by Computer Vision service will appear here:\n        </p>\n        <ul>\n          {messages.map((msg, index) => (\n            <li key={index}>{msg}</li>\n          ))}\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,MAAM,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAEtDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC;IAEDJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;MACvBJ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEG,IAAI,CAAC;;MAEzC;MACAV,WAAW,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;IACxC,CAAC;IAEDP,MAAM,CAACS,OAAO,GAAG,MAAM;MACrBN,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC;IAEDL,KAAK,CAACC,MAAM,CAAC;;IAEb;IACA,OAAO,MAAM;MACXA,MAAM,CAACU,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBnB,OAAA;MAAQkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BnB,OAAA;QAAAmB,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CvB,OAAA;QAAAmB,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJvB,OAAA;QAAAmB,QAAA,EACGhB,QAAQ,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB1B,OAAA;UAAAmB,QAAA,EAAiBM;QAAG,GAAXC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CA/CQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}