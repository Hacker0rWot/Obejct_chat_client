{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\BE MAJOR PROJECT Krutik\\\\client\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const videoRef = useRef(null);\n  const wsRef = useRef(null);\n  const [image, setImage] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [inputMsg, setInputMsg] = useState(\"\");\n\n  // ------------------- WebSocket -------------------\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:7001/ws\");\n    ws.onopen = () => console.log(\"WebSocket connected!\");\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"detection_broadcast\") {\n        setImage(`data:image/jpeg;base64,${data.image}`);\n        setDetections(data.detections);\n      } else if (data.type === \"new_message\") {\n        const {\n          object_id,\n          message\n        } = data;\n        setMessages(prev => ({\n          ...prev,\n          [object_id]: [...(prev[object_id] || []), message]\n        }));\n      }\n    };\n    wsRef.current = ws;\n    return () => ws.close();\n  }, []);\n\n  // ------------------- Camera -------------------\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      videoRef.current.play();\n    });\n  }, []);\n\n  // ------------------- Send frames -------------------\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!videoRef.current) return;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 640;\n      canvas.height = 480;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(videoRef.current, 0, 0, 640, 480);\n      canvas.toBlob(async blob => {\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"frame.jpg\");\n        await fetch(\"http://localhost:7001/detect\", {\n          method: \"POST\",\n          body: formData\n        });\n      }, \"image/jpeg\");\n    }, 200); // 5 FPS\n    return () => clearInterval(interval);\n  }, []);\n\n  // ------------------- Send message -------------------\n  const sendMessage = () => {\n    if (!selectedObject || !inputMsg) return;\n    wsRef.current.send(JSON.stringify({\n      type: \"send_message\",\n      object_id: selectedObject,\n      user_id: \"user_1\",\n      text: inputMsg\n    }));\n    setInputMsg(\"\");\n  };\n\n  // ------------------- AES-GCM Decrypt -------------------\n  const base64ToArrayBuffer = base64 => {\n    const binary = window.atob(base64);\n    const len = binary.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);\n    return bytes.buffer;\n  };\n  const decryptAESGCM = async (ciphertextB64, ivB64, keyB64) => {\n    try {\n      const keyBuffer = base64ToArrayBuffer(keyB64);\n      const cryptoKey = await window.crypto.subtle.importKey(\"raw\", keyBuffer, {\n        name: \"AES-GCM\"\n      }, false, [\"decrypt\"]);\n      const iv = base64ToArrayBuffer(ivB64);\n      const ct = base64ToArrayBuffer(ciphertextB64);\n      const decrypted = await window.crypto.subtle.decrypt({\n        name: \"AES-GCM\",\n        iv\n      }, cryptoKey, ct);\n      return new TextDecoder().decode(decrypted);\n    } catch {\n      return \"[Decryption Failed]\";\n    }\n  };\n\n  // ------------------- Display -------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCE1 AI/ML Real-Time Messaging System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"inline-block\"\n      },\n      children: [image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Detection\",\n        style: {\n          maxWidth: \"800px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }, this), detections.map(det => {\n        const [x1, y1, x2, y2] = det.bbox;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedObject(det.object_id),\n          style: {\n            position: \"absolute\",\n            left: x1,\n            top: y1,\n            width,\n            height,\n            border: \"2px solid red\",\n            cursor: \"pointer\",\n            backgroundColor: selectedObject === det.object_id ? \"rgba(255,0,0,0.2)\" : \"transparent\"\n          },\n          children: det.class\n        }, det.object_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Object: \", selectedObject || \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: \"200px\",\n          overflowY: \"auto\",\n          border: \"1px solid gray\",\n          padding: \"10px\"\n        },\n        children: selectedObject && messages[selectedObject] ? _s(messages[selectedObject].map(_s(msg => {\n          _s();\n          const [plaintext, setPlaintext] = useState(\"[Decrypting...]\");\n          useEffect(() => {\n            if (msg.text_enc) {\n              decryptAESGCM(msg.text_enc.ciphertext, msg.text_enc.iv, msg.text_enc.key).then(text => setPlaintext(text));\n            }\n          }, [msg]);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [msg.user_id, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this), \" \", plaintext]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this);\n        }, \"61xLcL6FO6J3/WcgxUBUzOic2sA=\")), \"61xLcL6FO6J3/WcgxUBUzOic2sA=\") : \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMsg,\n        onChange: e => setInputMsg(e.target.value),\n        placeholder: \"Type message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"BG9ufR3LTJbypX0cZWmRvlGatQ4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","videoRef","wsRef","image","setImage","detections","setDetections","selectedObject","setSelectedObject","messages","setMessages","inputMsg","setInputMsg","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","object_id","message","prev","current","close","navigator","mediaDevices","getUserMedia","video","then","stream","srcObject","play","interval","setInterval","canvas","document","createElement","width","height","ctx","getContext","drawImage","toBlob","blob","formData","FormData","append","fetch","method","body","clearInterval","sendMessage","send","stringify","user_id","text","base64ToArrayBuffer","base64","binary","window","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","decryptAESGCM","ciphertextB64","ivB64","keyB64","keyBuffer","cryptoKey","crypto","subtle","importKey","name","iv","ct","decrypted","decrypt","TextDecoder","decode","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","display","position","src","alt","maxWidth","map","det","x1","y1","x2","y2","bbox","onClick","left","top","border","cursor","backgroundColor","class","marginTop","maxHeight","overflowY","msg","plaintext","setPlaintext","text_enc","ciphertext","key","id","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/projects/BE MAJOR PROJECT Krutik/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nexport default function App() {\n  const videoRef = useRef(null);\n  const wsRef = useRef(null);\n\n  const [image, setImage] = useState(null);\n  const [detections, setDetections] = useState([]);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [inputMsg, setInputMsg] = useState(\"\");\n\n  // ------------------- WebSocket -------------------\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://localhost:7001/ws\");\n    ws.onopen = () => console.log(\"WebSocket connected!\");\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n\n      if (data.type === \"detection_broadcast\") {\n        setImage(`data:image/jpeg;base64,${data.image}`);\n        setDetections(data.detections);\n      } else if (data.type === \"new_message\") {\n        const { object_id, message } = data;\n        setMessages((prev) => ({\n          ...prev,\n          [object_id]: [...(prev[object_id] || []), message],\n        }));\n      }\n    };\n    wsRef.current = ws;\n    return () => ws.close();\n  }, []);\n\n  // ------------------- Camera -------------------\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      });\n  }, []);\n\n  // ------------------- Send frames -------------------\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!videoRef.current) return;\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 640;\n      canvas.height = 480;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(videoRef.current, 0, 0, 640, 480);\n      canvas.toBlob(async (blob) => {\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"frame.jpg\");\n        await fetch(\"http://localhost:7001/detect\", {\n          method: \"POST\",\n          body: formData,\n        });\n      }, \"image/jpeg\");\n    }, 200); // 5 FPS\n    return () => clearInterval(interval);\n  }, []);\n\n  // ------------------- Send message -------------------\n  const sendMessage = () => {\n    if (!selectedObject || !inputMsg) return;\n    wsRef.current.send(\n      JSON.stringify({\n        type: \"send_message\",\n        object_id: selectedObject,\n        user_id: \"user_1\",\n        text: inputMsg,\n      })\n    );\n    setInputMsg(\"\");\n  };\n\n  // ------------------- AES-GCM Decrypt -------------------\n  const base64ToArrayBuffer = (base64) => {\n    const binary = window.atob(base64);\n    const len = binary.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);\n    return bytes.buffer;\n  };\n\n  const decryptAESGCM = async (ciphertextB64, ivB64, keyB64) => {\n    try {\n      const keyBuffer = base64ToArrayBuffer(keyB64);\n      const cryptoKey = await window.crypto.subtle.importKey(\n        \"raw\",\n        keyBuffer,\n        { name: \"AES-GCM\" },\n        false,\n        [\"decrypt\"]\n      );\n      const iv = base64ToArrayBuffer(ivB64);\n      const ct = base64ToArrayBuffer(ciphertextB64);\n      const decrypted = await window.crypto.subtle.decrypt(\n        { name: \"AES-GCM\", iv },\n        cryptoKey,\n        ct\n      );\n      return new TextDecoder().decode(decrypted);\n    } catch {\n      return \"[Decryption Failed]\";\n    }\n  };\n\n  // ------------------- Display -------------------\n  return (\n    <div style={{ padding: \"20px\" }}>\n      <h1>📡 AI/ML Real-Time Messaging System</h1>\n\n      {/* Hidden Camera */}\n      <video ref={videoRef} style={{ display: \"none\" }} />\n\n      {/* Detection Image */}\n      <div style={{ position: \"relative\", display: \"inline-block\" }}>\n        {image && <img src={image} alt=\"Detection\" style={{ maxWidth: \"800px\" }} />}\n        {detections.map((det) => {\n          const [x1, y1, x2, y2] = det.bbox;\n          const width = x2 - x1;\n          const height = y2 - y1;\n          return (\n            <div\n              key={det.object_id}\n              onClick={() => setSelectedObject(det.object_id)}\n              style={{\n                position: \"absolute\",\n                left: x1,\n                top: y1,\n                width,\n                height,\n                border: \"2px solid red\",\n                cursor: \"pointer\",\n                backgroundColor:\n                  selectedObject === det.object_id ? \"rgba(255,0,0,0.2)\" : \"transparent\",\n              }}\n            >\n              {det.class}\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Message Box */}\n      <div style={{ marginTop: \"20px\" }}>\n        <h3>Selected Object: {selectedObject || \"None\"}</h3>\n        <div\n          style={{\n            maxHeight: \"200px\",\n            overflowY: \"auto\",\n            border: \"1px solid gray\",\n            padding: \"10px\",\n          }}\n        >\n          {selectedObject && messages[selectedObject]\n            ? messages[selectedObject].map((msg) => {\n                const [plaintext, setPlaintext] = useState(\"[Decrypting...]\");\n                useEffect(() => {\n                  if (msg.text_enc) {\n                    decryptAESGCM(msg.text_enc.ciphertext, msg.text_enc.iv, msg.text_enc.key).then(\n                      (text) => setPlaintext(text)\n                    );\n                  }\n                }, [msg]);\n                return (\n                  <div key={msg.id}>\n                    <b>{msg.user_id}:</b> {plaintext}\n                  </div>\n                );\n              })\n            : \"No messages yet.\"}\n        </div>\n        <input\n          type=\"text\"\n          value={inputMsg}\n          onChange={(e) => setInputMsg(e.target.value)}\n          placeholder=\"Type message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}